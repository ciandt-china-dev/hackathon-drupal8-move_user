<?php
/**
 * @file
 * Adds a new method for cancelling user accounts.
 */

/**
 * Implements hook_user_cancel_menthods_alter().
 */
function move_user_user_cancel_methods_alter(&$methods) {
  unset($methods['user_cancel_reassign']);
  // Add a custom move user reassign method.
  $methods['move_user_reassign'] = array(
    'title' => t('Disable the account and make its content belong to another user.'),
    'description' => t('All your content will be removed and assigned to a different user'),
    'access' => \Drupal::currentUser()->hasPermission('administer users'),
  );
}

/**
 * Implements hook_form_alter().
 */
function move_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id) {
  if ($form_id == 'user_cancel_form' || $form_id == 'user_multiple_cancel_confirm') {
    $form['#attached']['library'][] = 'move_user/move_user';
    $form['reassign_user'] = array(
      '#type' => 'entity_autocomplete',
      '#target_type' => 'user',
      '#title' => t('Reassign content to:'),
      '#maxlength' => 60,
      '#weight' => 10,
      '#description' => t('Leave blank for %anonymous.',
        array('%anonymous' => \Drupal::config('user.settings')->get('anonymous'))),
    );
  }
}

/**
 * Implements hook_user_cancel().
 */
function move_user_user_cancel($edit, $account, $method) {
  $new_uid = $edit['reassign_user'];
  switch ($method) {
    case 'move_user_reassign':

      module_load_include('inc', 'node', 'node.admin');

      $nodes = \Drupal::entityQuery('node')
        ->condition('uid', $account->id())
        ->execute();
      node_mass_update($nodes, array('uid' => $new_uid), NULL, TRUE);

      db_update('node_field_revision')
        ->fields(array('uid' => $new_uid))
        ->condition('uid', $account->id())
        ->execute();

      break;
  }
}
